<?xml version="1.0" encoding="UTF-8" ?>
<ChoregrapheProject xmlns="http://www.aldebaran-robotics.com/schema/choregraphe/project.xsd" xar_version="3">
    <Box name="root" id="-1" localization="8" tooltip="Root box of Choregraphe&apos;s behavior. Highest level possible." x="0" y="0">
        <bitmap>media/images/box/root.png</bitmap>
        <script language="4">
            <content>
                <![CDATA[]]>
</content>
        </script>
        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
        <Input name="Places/Exit" type="0" type_size="1" nature="4" stm_value_name="Places/Exit" inner="1" tooltip="Places/Exit desc" id="4" />
        <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="5" />
        <Timeline enable="0">
            <BehaviorLayer name="behavior_layer1">
                <BehaviorKeyframe name="keyframe1" index="1">
                    <Diagram>
                        <Box name="Display map" id="1" localization="8" tooltip="" x="523" y="33">
                            <bitmap>media/images/box/box-python-script.png</bitmap>
                            <script language="4">
                                <content>
                                    <![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)
        try:
            self.exploManager = self.session().service("ExplorationManager")
        except Exception as e:
            self.logger.warning("Unable to reach ExplorationManager service: " + str(e))
            self.exploManager = None
            self.onUnload()
            self.onStopped()
        self.mem = self.session().service("ALMemory")
        self.tts = self.session().service("ALAnimatedSpeech")
        self.life = self.session().service("ALAutonomousLife")
        self.events = {"exploList": "Places/AvailableExplo",
                        "exit": "Places/Exit"}
        self.declareEvents()

    def declareEvents(self):
        for k in self.events:
            self.mem.declareEvent(self.events[k])

    def onLoad(self):
        self.life.setSafeguardEnabled("RobotMoved", False)
        self.life.setSafeguardEnabled("RobotPushed", False)
        self.ba = self.session().service("ALBasicAwareness")
        self.ba.stopAwareness()
        pass

    def onUnload(self):
        #put clean-up code here
        pass

    def onInput_onStart(self):
        if self.exploManager == None or not(self.exploManager.showWebPage()):
            self.onStopped()
            return
        #self.onStopped() #activate the output of the box
        list = self.exploManager.getAvailableExplorations()
        if len(list) < 1:
            self.tts.say("I have never been here, please use explore app before.")
            self.onStopped()
            return
        if self.exploManager.isExplorationLoaded():
            self.exploManager.showPlaces()
            self.tts.say("You can add new places to the map by clicking on it. Don't forget to save them")
        else:
            self.tts.say("Please select an exploration to load from the list")
        self.logger.info("available explo: " + str(list))

        pass

    def onInput_onStop(self):
        self.onUnload() #it is recommended to reuse the clean-up as the box is stopped
        self.onStopped() #activate the output of the box]]>
</content>
                            </script>
                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                            <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                            <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                            <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                        </Box>
                        <Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="2" />
                        <Link inputowner="0" indexofinput="5" outputowner="1" indexofoutput="4" />
                        <Link inputowner="1" indexofinput="3" outputowner="0" indexofoutput="4" />
                    </Diagram>
                </BehaviorKeyframe>
            </BehaviorLayer>
        </Timeline>
    </Box>
</ChoregrapheProject>
